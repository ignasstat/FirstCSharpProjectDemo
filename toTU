function Add-XMLNode {
    param (
        [System.Xml.XmlDocument]$XML_Doc,     # Document where nodes are created
        [System.Xml.XmlElement]$XML_Parent,   # Parent element to append this node
        [string]$NodeName,                    # New node's name
        [string]$NodeValue                    # New node's value
    )
    
    # Create the new element in the document
    $Node = $XML_Doc.CreateElement($NodeName)
    $Node.InnerText = $NodeValue

    # Append the newly created element to the parent
    $XML_Parent.AppendChild($Node) | Out-Null
}


function Create-TriggerFile {
    param(
        [string]$GUIDString,
        [ref]$ActionListNames,
        [string]$SaveLocation,
        [ref]$NodeStep,
        [string]$DestinationFolder,
        [string]$JobNumber,
        [string]$JobClient
    )

    # Create an XML document with a root element
    $xmlDoc = New-Object System.Xml.XmlDocument
    $root = $xmlDoc.CreateElement("EFT_Action")
    $xmlDoc.AppendChild($root) | Out-Null

    # Add nodes to the XML document
    Add-XMLNode $xmlDoc $root "ProcessPriority" "50"
    Add-XMLNode $xmlDoc $root "GUID" $GUIDString
    Add-XMLNode $xmlDoc $root "StepSequence" ([string]$NodeStep.Value)
    Add-XMLNode $xmlDoc $root "CreationDTS" (Get-Date -Format "yyyy-MM-dd HH:mm:ss")
    Add-XMLNode $xmlDoc $root "RetriesRemaining" "2"
    Add-XMLNode $xmlDoc $root "LastAttemptDTS" ""
    Add-XMLNode $xmlDoc $root "LastResult" ""
    Add-XMLNode $xmlDoc $root "FailureNotificationEmail" ""

    # Ensure $emailNode is correctly referenced as the last child element added
    $emailNode = $root.LastChild
    Add-XMLNode $xmlDoc $emailNode "To" "DataOperationsEFT-CD@transunion.co.uk"
    Add-XMLNode $xmlDoc $emailNode "CC" "DataBureau@transunion.co.uk"
    Add-XMLNode $xmlDoc $emailNode "BCC" ""
    Add-XMLNode $xmlDoc $emailNode "Subject" "DTP - $JobClient - $JobNumber - Email Notification - Failed"
    Add-XMLNode $xmlDoc $emailNode "Message" "The DTP has failed at creating a completed file transfer trigger file in $DestinationFolder."

    # Save the XML to a file
    $formattedNodeStep = "{0:D2}" -f $NodeStep.Value
    $xmlPath = Join-Path -Path $SaveLocation -ChildPath "50_$GUIDString_$formattedNodeStep.xml"
    $xmlDoc.Save($xmlPath)
    $ActionListNames.Value += "$xmlPath;"
    
    # Increment the step
    $NodeStep.Value++
}
