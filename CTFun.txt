# Define the ClearFileLock function in PowerShell
function ClearFileLock($fileID, $fileSource) {
    $sql = "EXECUTE [dbo].[up_CT_ClearFileLock] $fileID, '$fileSource'"
    Execute-SQLCommand $sql
}

# Check if the file has been modified and needs to be locked or rejected
if ($blnProcess) {
    $source = $table.Rows[0]["Source"]
    $fileID = $table.Rows[0]["FileID"]
    if ($source -eq "E") {
        if ($fileCheck -ne "OK") {
            Write-Host "This file or version of it $fileCheck, Reject it and Refresh Data"
            ClearFileLock $fileID "E"
            $blnProcess = $false
        }
    } else {
        if ($fileCheck -ne "OK") {
            Write-Host "This file or version of it $fileCheck, Reject it and Refresh Data"
            ClearFileLock $fileID "I"
            $blnProcess = $false
        }
    }
}

# Continue processing if the file is still okay to process
if ($blnProcess) {
    $source = $table.Rows[0]["Source"]
    $createdDate = $table.Rows[0]["CreatedDate"]
    $updatedDate = $table.Rows[0]["UpdatedDate"]
    $strDate = ""

    # Determine the most recent date between created and updated dates
    if ($createdDate -gt $updatedDate) {
        $strDate = $createdDate.ToString("dd MMM yyyy HH:mm")
    } else {
        $strDate = $updatedDate.ToString("dd MMM yyyy HH:mm")
    }

    # Assume further processing occurs here, such as logging to a job table or similar
}
