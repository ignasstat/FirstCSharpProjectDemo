# Set up your SQL connection details
$server = "xxxxxxxx"
$database = "yyyyyyyyy"
$connectionString = "Server=$server;Database=$database;Integrated Security=True;"

# Specify the path for the transcript file
$transcriptPath = "C:\Path\To\Your\Transcript.log"

# Start transcript logging
Start-Transcript -Path $transcriptPath

# Create a SQL connection
$sqlConnection = New-Object System.Data.SqlClient.SqlConnection
$sqlConnection.ConnectionString = $connectionString

try {
    $sqlConnection.Open()

    # Loop through each row in the dataset
    foreach ($row in $dataSet.Tables[0].Rows) {
        $filePath = $row["FileFullPath"]
        $fileExists = Test-Path $filePath

        # Determine the value for FilePresent
        $filePresentValue = if ($fileExists) { 'Y' } else { 'N' }

        # Create a SQL command to update the 'FilePresent' column in the database
        $updateCommandText = "UPDATE CT_TestIgnas SET FilePresent = '$filePresentValue' WHERE FileFullPath = '$filePath'"
        $updateCommand = $sqlConnection.CreateCommand()
        $updateCommand.CommandText = $updateCommandText

        try {
            # Execute the update command
            $updateCommand.ExecuteNonQuery() | Out-Null
            Write-Host "Update successful for file: $filePath"
        } catch {
            Write-Host "Error updating file: $filePath. Error: $_"
            # Log the error to the transcript file
            "$($_.Exception.Message)`r`n" | Out-File -Append -FilePath $transcriptPath
        }
    }
} catch {
    Write-Host "Error opening SQL connection. Error: $_"
    # Log the error to the transcript file
    "$($_.Exception.Message)`r`n" | Out-File -Append -FilePath $transcriptPath
} finally {
    # Close the SQL connection
    $sqlConnection.Close()
    Write-Host "SQL connection closed."

    # Stop transcript logging
    Stop-Transcript
}

# Display the updated data
$dataSet.Tables[0] | Format-Table -AutoSize
