Dim strFileName As String
    Dim Source As String
    Dim strDate As String
    Dim CreatedDate As Date
    Dim UpdatedDate As Date
    Dim FileSize As Integer
    Dim blnProcess As Boolean
    Dim strSQL As String
    Dim rst As Recordset
    
    Set rst = New Recordset
    
    ' Set rstJ = New Recordset
    Dim selectedRow As Integer
    Dim JobNumber As String
    Dim IsEmpty As Boolean
    Dim FileCheck As String
    
    
    If Not IsNull(lstFileView.Value) Then
        ' Job number from list
        lngFileID = lstFileView.Value
        blnProcess = True
        
        ' Job number from list
        selectedRow = lstFileView.ListIndex
        selectedRow = selectedRow + 1
        JobNumber = lstFileView.Column(1, selectedRow)
        
        If JobNumber = "No Matches" Or JobNumber = "Multiple Matches" Then
            blnProcess = False
            MsgBox ("File has " & JobNumber & " with jobs")
        End If
        
        ' CTC116 Additional parameter JobNumber, also function returns string instead of boolean
        FileCheck = CheckFileExists(lngFileID, JobNumber)
        
        If blnProcess = True Then
            ' Check if the file has been processed or selected by another user
            strSQL = "select * from dbo.vw_CT_CheckFile where fileid = " & LTrim(str(lngFileID))
            rst.Open strSQL, db, adOpenForwardOnly, adLockReadOnly
            
            If Not rst.EOF Then
                If Not IsNull(rst("FileUser")) Then
                    If LCase(Trim(rst("FileUser"))) = LCase(Trim(strUserName)) Then
                        ' Current user, so OK
                    Else
                        Call MsgBox("File already in use by " & Trim(rst("FileUser")), vbOKOnly)
                        blnProcess = False
                    End If
                Else
                    ' Lock the file so nobody else can use it
                    strSQL = "insert into dbo.CT_FileLock (FileID, Source, FileUser, dts) values ("
                    strSQL = strSQL & rst("FileID") & ","
                    strSQL = strSQL & "'" & rst("Source") & "',"
                    strSQL = strSQL & "'" & strUserName & "',"
                    strSQL = strSQL & "getdate())"
                    db.Execute (strSQL)
                End If
            Else
                blnProcess = False
                MsgBox ("File no longer available to process, Reject it and Refresh Data")
                lstFileView.Requery
                lstRejected.Requery
            End If
            
            ' CTC 039 - Cannot check if the file exists directly anymore as the user won't have permission to the EFT folder, added method CheckFileExists
            If blnProcess Then
                ' Need to check if the file has changed since the last update of the list.
                ' If SFTP
                If rst("Source") = "E" Then
                    If Not FileCheck = "OK" Then
                        MsgBox ("This file or version of it " & FileCheck & ", Reject it and Refresh Data")
                        Call ClearFileLock(rst("FileID"), "E")
                        blnProcess = False
                    End If
                ' If Data In
                Else
                    If Not FileCheck = "OK" Then
                        MsgBox ("This file or version of it " & FileCheck & ", Reject it and Refresh Data")
                        Call ClearFileLock(rst("FileID"), "I")
                        blnProcess = False
                    End If
                End If
            End If
            
            If blnProcess Then
                If rst("Source") = "E" Then
                    ' lblSource.Caption = "SFTP"
                    ' Source = "SFTP"
                    Source = "E"
                Else
                    ' lblSource.Caption = "Data In"
                    ' Source = "Data In"
                    Source = "I"
                End If
                
                CreatedDate = rst("CreatedDate")
                UpdatedDate = rst("UpdatedDate")
            
                If blnProcess Then
                    If CreatedDate > UpdatedDate Then
                        strDate = Format(CreatedDate, "dd mmm yyyy HH:MM")
                    Else
                        strDate = Format(UpdatedDate, "dd mmm yyyy HH:MM")
                    End If
                    
                    ' Create an entry in the Job Run Table
                    strSQL = "insert into dbo.CT_JobRun (CT_JobID,fileid,FileSource,RunNo,CreatedBy,createddate,RunStatus, DueByDate) "
                    strSQL = strSQL & "Select ct_JobID, "
                    strSQL = strSQL & Trim(str(lngFileID)) & ","
                    strSQL = strSQL & "'" & Source & "',"
                    strSQL = strSQL & "case when LastRun > LastNeptuneRun then LastRun+1 else LastNeptuneRun+1 end, "
                    strSQL = strSQL & "'" & strUserName & "',"
                    strSQL = strSQL & "getdate(),"
                    strSQL = strSQL & "'Logged',"
                    strSQL = strSQL & "dbo.fn_CallTraceDueDate_New('" & strDate & "', j.job_number ) "
                    strSQL = strSQL & "from dbo.vw_CallTraceJobList v "
                    strSQL = strSQL & "inner join dbo.ct_jobs j on v.job_number = j.job_number "
                    strSQL = strSQL & "where v.job_number = '" & JobNumber & "'"
                    
                    ' MsgBox ("Linking " & Trim(lstJobs.Value))
                    strFileName = rst("FileName")
                    MsgBox ("Linking " & strFileName & " to " & JobNumber)
                    
                    db.Execute (strSQL)
                End If
                
                rst.Close
